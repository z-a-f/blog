#!/usr/bin/env python2

import unittest as ut

from spiral import *

class TestSpiral(ut.TestCase):
    def test_example(self):
        inp = [
            [ 1, 2, 3 ],
            [ 4, 5, 6 ],
            [ 7, 8, 9 ]
        ]
        expect = [1, 2, 3, 6, 9, 8, 7, 4, 5]
        self.assertEqual(expect, spiralOrder(inp))

    def test_empty(self):
        inp = []
        expect = []
        self.assertEqual(expect, spiralOrder(inp))

    def test_singleElement(self):
        inp = [[1]]
        expect = [1]
        self.assertEqual(expect, spiralOrder(inp))

    def test_singleRow(self):
        inp = [[1,2,3,4,5]]
        expect = [1,2,3,4,5]
        self.assertEqual(expect, spiralOrder(inp))

    def test_singleColumn(self):
        inp = [[1],[2],[3],[4],[5]]
        expect = [1,2,3,4,5]
        self.assertEqual(expect, spiralOrder(inp))

    def test_simpleCases(self):
        inp = [
            ([1],), 
            ([1, 2], [3, 4], [5, 6]),
        ]
        expect = [
            [1],
            [1,2,4,6,5,3],
        ]
        for idx in range(len(inp)):
            self.assertEqual(expect[idx], spiralOrder(inp[idx]))

    def test_complexCases(self):
        inp = [
            ([1, 2], [3, 4]),
            ([1, 2, 3], [4, 5, 6]),
            ([1], [2], [3]),
            ([1, 2],),
            ([119],),
            ([313, 157, 290, 113, 119, 118, 187, 360, 104, 365, 197, 103, 355, 240, 337, 174, 138, 252],),
            ([314, 360, 87, 178, 280, 297, 22, 88, 304, 68, 69, 239, 360, 214, 106, 212, 203, 115, 297, 225],),
            ([262, 395, 111, 168, 363],),
            ([166, 110, 371, 120, 308, 170, 109, 115],),
            ([11, 217, 223, 213, 178, 226, 166, 212, 121, 277, 188, 5, 56, 354, 6], [69, 384, 201, 369, 72, 174, 320, 265, 61, 397, 152, 10, 385, 288, 23]),
            ([382, 230, 288, 256, 227, 387, 59, 231, 23, 269, 238, 123, 301, 334, 89, 279, 302, 143], [115, 178, 7, 63, 48, 176, 328, 26, 272, 276, 378, 333, 225, 319, 202, 90, 287, 18]),
            ([103], [340], [318]),
            ([133, 241, 22, 258, 187, 150, 79, 207, 196, 401, 366, 335, 198], [401, 55, 260, 363, 14, 318, 178, 296, 333, 296, 45, 37, 10], [112, 374, 79, 12, 97, 39, 310, 223, 139, 91, 171, 95, 126]),
            ([396, 374, 93, 267, 135, 320, 52, 389, 150, 5, 36, 185, 158, 229, 130], [182, 178, 65, 48, 284, 376, 36, 304, 58, 19, 63, 297, 160, 141, 249], [166, 309, 395, 37, 90, 211, 228, 318, 51, 167, 351, 222, 201, 83, 342]),
            ([299, 137, 55, 368, 387, 50, 252, 172, 295, 319, 125, 186, 14, 306, 298, 101], [293, 108, 171, 224, 189, 135, 73, 188, 128, 1, 102, 383, 328, 385, 45, 263], [134, 145, 276, 24, 277, 352, 378, 317, 283, 135, 214, 3, 377, 348, 50, 29]),
            ([177, 76, 241, 176, 393, 287, 43, 260, 221, 217, 81, 312, 34, 96, 182, 192, 336], [5, 363, 284, 135, 298, 11, 3, 96, 242, 301, 25, 376, 390, 308, 154, 332, 144], [161, 303, 298, 302, 294, 274, 167, 76, 239, 252, 240, 216, 136, 97, 390, 375, 204]),
            ([132, 26, 395, 255, 228, 375, 229, 352], [95, 392, 11, 231, 32, 263, 155, 160], [374, 153, 316, 355, 349, 178, 58, 298]),
            ([335, 401, 128, 384, 345, 275, 324, 139, 127, 343, 197, 177, 127, 72, 13, 59], [102, 75, 151, 22, 291, 249, 380, 151, 85, 217, 246, 241, 204, 197, 227, 96], [261, 163, 109, 372, 238, 98, 273, 20, 233, 138, 40, 246, 163, 191, 109, 237], [179, 213, 214, 9, 309, 210, 319, 68, 400, 198, 323, 135, 14, 141, 15, 168]),


        ]
        expect = [
            [1,2,4,3],
            [1,2,3,6,5,4],
            [1,2,3],
            [1,2],
            [119],
            [313, 157, 290, 113, 119, 118, 187, 360, 104, 365, 197, 103, 355, 240, 337, 174, 138, 252],
            [314, 360, 87, 178, 280, 297, 22, 88, 304, 68, 69, 239, 360, 214, 106, 212, 203, 115, 297, 225],
            [262, 395, 111, 168, 363],
            [166, 110, 371, 120, 308, 170, 109, 115],
            [11, 217, 223, 213, 178, 226, 166, 212, 121, 277, 188, 5, 56, 354, 6, 23, 288, 385, 10, 152, 397, 61, 265, 320, 174, 72, 369, 201, 384, 69],
            [382, 230, 288, 256, 227, 387, 59, 231, 23, 269, 238, 123, 301, 334, 89, 279, 302, 143, 18, 287, 90, 202, 319, 225, 333, 378, 276, 272, 26, 328, 176, 48, 63, 7, 178, 115],
            [103, 340, 318],
            [133, 241, 22, 258, 187, 150, 79, 207, 196, 401, 366, 335, 198, 10, 126, 95, 171, 91, 139, 223, 310, 39, 97, 12, 79, 374, 112, 401, 55, 260, 363, 14, 318, 178, 296, 333, 296, 45, 37],
            [396, 374, 93, 267, 135, 320, 52, 389, 150, 5, 36, 185, 158, 229, 130, 249, 342, 83, 201, 222, 351, 167, 51, 318, 228, 211, 90, 37, 395, 309, 166, 182, 178, 65, 48, 284, 376, 36, 304, 58, 19, 63, 297, 160, 141],
            [299, 137, 55, 368, 387, 50, 252, 172, 295, 319, 125, 186, 14, 306, 298, 101, 263, 29, 50, 348, 377, 3, 214, 135, 283, 317, 378, 352, 277, 24, 276, 145, 134, 293, 108, 171, 224, 189, 135, 73, 188, 128, 1, 102, 383, 328, 385, 45],
            [177, 76, 241, 176, 393, 287, 43, 260, 221, 217, 81, 312, 34, 96, 182, 192, 336, 144, 204, 375, 390, 97, 136, 216, 240, 252, 239, 76, 167, 274, 294, 302, 298, 303, 161, 5, 363, 284, 135, 298, 11, 3, 96, 242, 301, 25, 376, 390, 308, 154, 332],
            [132, 26, 395, 255, 228, 375, 229, 352, 160, 298, 58, 178, 349, 355, 316, 153, 374, 95, 392, 11, 231, 32, 263, 155],
            [335, 401, 128, 384, 345, 275, 324, 139, 127, 343, 197, 177, 127, 72, 13, 59, 96, 237, 168, 15, 141, 14, 135, 323, 198, 400, 68, 319, 210, 309, 9, 214, 213, 179, 261, 102, 75, 151, 22, 291, 249, 380, 151, 85, 217, 246, 241, 204, 197, 227, 109, 191, 163, 246, 40, 138, 233, 20, 273, 98, 238, 372, 109, 163],
        ]
        for idx in range(len(inp)):
            self.assertEqual(expect[idx], spiralOrder(inp[idx]))

if __name__ == '__main__':
    ut.main()


